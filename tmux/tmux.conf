# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'tmux-plugins/tmux-yank'

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal "screen-256color"
set -sa terminal-overrides ",xterm-256color:RGB"
set -ga terminal-overrides ",xterm-256color:Tc"

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g mouse on

# status bar theme
set -g status-justify "centre"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=#e1e0cf,bg=#3a6191"
set -g status-right-style "none"
set -g pane-active-border-style "fg=#9e1126"
set -g status-style "none,bg=#282828"
set -g message-style "fg=#e1e0cf,bg=#3a6191"
set -g pane-border-style "fg=#aeaeae"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "underscore,fg=#a7b0bb,bg=#394d67"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=#a7b0bb,bg=#394d67"
set -g status-left "#[fg=#1d3149,bg=#89a0bd] ﯱ #S #[fg=#89a0bd,bg=#1d3149,nobold,nounderscore,noitalics]#[fg=#89a0bd,bg=#1d3149]  %R    #H #[fg=#1d3149,bg=#282828,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#1d3149,bg=#282828,nobold,nounderscore,noitalics]#[fg=#89a0bd,bg=#1d3149] ⏻ #(uptime | cut -d \" \" -f 1)   #(whoami) #[fg=#89a0bd,bg=#1d3149,nobold,nounderscore,noitalics]#[fg=#1d3149,bg=#89a0bd]  %a, %d/%m/%Y #[fg=#1d3149,bg=#89a0bd,nobold,nounderscore,noitalics]#[fg=#9e1126,bg=#1d3149] #{?client_prefix,, } "
setw -g window-status-format "#[fg=#282828,bg=#394d67,nobold,nounderscore,noitalics]#[default]  #I(#W) #{?window_bell_flag,,} #[fg=#394d67,bg=#282828,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=#282828,bg=#3a6191,nobold,nounderscore,noitalics]#[fg=#e1e0cf,bg=#3a6191] 缾 #I   #W   #F #{?window_bell_flag,,}#{?window_zoomed_flag,,} #[fg=#3a6191,bg=#282828,nobold,nounderscore,noitalics]"
set-option -g status-interval 2

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Screen like binding
# unbind C-b
set -g prefix C-a
set -g prefix2 C-b
bind a send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 50000

# New windows/pane in $PWD

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# uncomment below to load a different theme
# if-shell "test -f $HOME/.dotfiles/tmux/themes/default.tmux.conf" "source $HOME/.dotfiles/tmux/themes/default.tmux.conf"

# to enable autoread on nvim
set-option -g focus-events on

# remap C-a t to C-a c and vice versa
unbind t
bind t new-window -c "#{pane_current_path}"
unbind c
bind c clock-mode

# vim copy (with C-c) and tmux copy with mouse selection
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
# bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboardnd-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

set -g @yank_selection_mouse 'clipboard'

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
