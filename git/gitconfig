# set your user tokens as environment variables, such as ~/.secrets
# See the README for examples.
[alias]
	a             = add                           # add
	amend         = commit --amend            # ammend your last commit
	ammend        = commit --amend           # ammend your last commit
	ap            = add --patch                  # stage commits chunk by chunk
	b             = branch -v                     # branch (verbose)
	bl            = blame -w                     # ignore whitespace changes in git blame
	c             = commit -m                     # commit with message
	cam           = commit -am                  # commit all with message
	changes       = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status # log changes
	ci            = commit -v                    # commit
	co            = checkout                     # checkout
	cp            = cherry-pick -x               # cherry-pick a change from a branch
	d             = diff                          # diff unstaged changes
	dc            = diff --cached                # diff staged changes
	edit          = commit --amend             # add to the previous commit
	filelog       = log -u                  # show changes to a file
	fix           = commit --amend --no-edit    # add to the previous commit without edits
  gitdir        = rev-parse --git-dir # path of the repo's .git dir
	l             = log --graph --date=short # log
	last          = diff HEAD^                 # diff last committed change
	lc            = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci)%Creset' --abbrev-commit --date=relative # log full with graph
	mt            = mergetool                    # fire up the merge tool
	nb            = switch -c                    # create and switch to a new branch (mnemonic: "git new branch branchname...")
	pl            = pull                         # pull
  ps            = push                         # push
	r             = remote -v                     # show remotes (verbose)
	rc            = rebase --continue            # continue rebase
	re            = restore                      # restore
	recent        = !git for-each-ref --count=15 --sort=-committerdate refs/heads/ --format='%(refname:short)' # show branches most recent first
  root          = rev-parse --show-toplevel  # repository root
	rs            = rebase --skip                # skip rebase
	s             = status                        # status
	sa            = stash apply                  # apply stash (restore changes)
	sd            = stash drop                   # drop stashes (destory changes)
	short         = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" # log short
	shortnocolor  = log --pretty=format:\"%h %cr %cn %s\" # log short with no colors
	simple        = log --pretty=format:\" * %s\" # log simple
	sl            = stash list                   # list stashes
	snap          = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}" # snapshot
	snaps         = !git stash list --grep snapshot # snapshot list
	ss            = stash                        # stash changes
	st            = status                       # status
	stat          = status                        # status
	su            = stash save -u                # stash including untracked
	sw            = switch                       # switch
	t             = tag -n                        # show tags with <n> lines of each tag message
	tree          = log --graph --full-history --all --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s" # log tree
	uncommit      = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
	unstage       = reset HEAD              # remove files from index (tracking)

[format]
	pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
[mergetool]
	prompt = false
[mergetool "vimdiff"]
	cmd="vim -c 'Gdiff' $MERGED"     # use fugitive.vim for 3-way merge
	keepbackup=false
[merge]
	summary = true
	verbosity = 1
	tool = vimdiff
	conflictstyle = diff3
[apply]
	whitespace = nowarn
[branch]
	autosetupmerge = true
[push]
	default = simple
[pull]
	rebase = false
[core]
	autocrlf = false
	editor = nvim
	excludesfile = ~/.dotfiles/git/gitignore
	pager = delta
	hooksPath = /home/miguel/.dotfiles/git/hooks
[advice]
	statusHints = false
[diff]
	mnemonicprefix = true
	algorithm = patience
	colorMoved = default
[rerere]
	# Remember my merges
	# http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
	enabled = true
[commit]
	template = .git/commit-msg
[include]
	path = .gitconfig.user
[rebase]
	autosquash = true
[user]
	name = Miguel Verissimo
	email = m.verissimo@gmail.com
[color]
	ui = true
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = "yellow bold"
	commit = "green bold"
	frag = "magenta bold"
	old = "red bold"
	new = "green bold"
	whitespace = "red reverse"
[color "diff-highlight"]
	oldNormal = "red bold"
	oldHighlight = "red bold 52"
	newNormal = "green bold"
	newHighlight = "green bold 22"
[credential]
	helper = store
[delta]
	navigate = true
[init]
	defaultBranch = master
